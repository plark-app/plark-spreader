version: "3.3"

services:

  #|------------------------------------------
  #| PostgreSQL
  #|------------------------------------------
  postgres:
    image: postgres:11.2
    restart: always
    environment:
      POSTGRES_DB: plark
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - ./postgres-data:/var/lib/postgresql/data



  #|------------------------------------------
  #| Nginx Proxy
  #|------------------------------------------
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d:/etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"



  #|------------------------------------------
  #| Letsencrypt Proxy
  #|------------------------------------------
  letsencrypt-nginx:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/nginx/certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/vhost.d:/etc/nginx/vhost.d
      - /usr/share/nginx/html:/usr/share/nginx/html



  #|------------------------------------------
  #| FrontEnd
  #| WEB Application as NodeJS Express
  #|------------------------------------------
  web:
    image: plark/plark-spreader:latest
    environment:
      VIRTUAL_HOST: spreader.plark.io
      VIRTUAL_PORT: 80
      LETSENCRYPT_HOST: spreader.plark.io
      APP_ENV: production
      HOST: spreader.plark.io
      PORT: 80
      SECURE: "true"
      DATABASE_NAME: plark
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: root
      DATABASE_HOST: postgres
    depends_on:
      - nginx-proxy
      - letsencrypt-nginx
      - postgres
